#!/bin/bash

# Add tab completion for many Bash commands

if which brew > /dev/null && [ -f "$(brew --prefix)/etc/bash_completion" ]; then
  source "$(brew --prefix)/etc/bash_completion";
elif [ -f /etc/bash_completion ]; then
  source /etc/bash_completion;
fi;

# Enable tab completion for `g` by marking it as an alias for `git`
if type _git &> /dev/null && [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
  complete -o default -o nospace -F _git g;
fi;

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;


# Add tab completion for `defaults read|write NSGlobalDomain`
# You could just use `-g` instead, but I like being explicit
complete -W "NSGlobalDomain" defaults;


# Add `killall` tab completion for common apps
complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal Twitter" killall;


# Auto jump
  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh




# Curl + Swagger
complete -o bashdefault -o default -o "nospace" -F _curlswag curlswag;
alias curlswag="curl"

## alternative to -W autocompletion.
function _curlswag() {
  local cur
  local LC_ALL='C'

  _get_comp_words_by_ref -n : cur

  # do not attempt completion if we're specifying an option
  [[ "$cur" == -* ]] && return 0

  IFS=' ' read -r -a POSITIONS <<< "$COMP_LINE"

  urlNoFile=`echo $cur | perl -n -e 'm{(https?://[^/]+)(/[^?]+)};print $1'`

  if [ "$urlNoFile" != "" ]; then
    ENDPOINTS=$(curl -ks $urlNoFile/swagger.json | jsontag paths | jsonkeys | tr '\n' ' ')

    IFS=' ' read -r -a ENDPOINTS_ARRAY <<< "$ENDPOINTS"
    EXPANDED=("${ENDPOINTS_ARRAY[@]/#/$urlNoFile}")

    #  COMPREPLY=( $(compgen -W "${EXPANDED[@]}" "$cur") )
    COMPREPLY=( $(filter_arr "^$cur" "${EXPANDED[@]}") )

    __ltrim_colon_completions "$cur"

  fi

  return 0;
}
